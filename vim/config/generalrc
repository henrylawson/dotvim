let mapleader="\\"
set nocompatible                  " Must come first because it changes other options.
syntax enable                     " Turn on syntax highlighting.
set showcmd                       " Display incomplete commands.
set showmode                      " Display the mode you're in.
set backspace=indent,eol,start    " Intuitive backspacing.
set hidden                        " Handle multiple buffers better.
set wildmenu                      " Enhanced command line completion.
set wildmode=list:longest         " Complete files like a shell.
set ignorecase                    " Case-insensitive searching.
set smartcase                     " But case-sensitive if expression contains a capital letter.
set number                        " Show line numbers.
set ruler                         " Show cursor position.
set incsearch                     " Highlight matches as you type.
set hlsearch                      " Highlight matches.
set wrap                          " Turn on line wrapping.
set scrolloff=3                   " Show 3 lines of context around the cursor.
set title                         " Set the terminal's title 
set visualbell                    " No beeping.
set ic														" Case insensitive searching
set clipboard=unnamed							" Clipboard sharing
set guioptions-=r									" Remove right scrollbar
set guioptions-=L									" Remove left scrollbar

" Disabling arrow keys
map <up> <nop>
map <down> <nop>
map <left> <nop>
map <right> <nop>

set tabstop=2
set shiftwidth=2
set softtabstop=2

" Filetype association
au BufNewFile,BufRead *rc set filetype=vim

" Colorscheme
colorschem codeschool
set guifont=Source\ Code\ Pro\ for\ Powerline:h16

" Powerline
set laststatus=2

" Folding
au FileType javascript call JavaScriptFold()
set foldmethod=syntax
inoremap <F9> <C-O>za
nnoremap <F9> za
onoremap <F9> <C-C>za
vnoremap <F9> zf
set nofoldenable

let g:airline_powerline_fonts=1
let g:airline#extensions#tabline#enabled=1
let g:airline_theme='wombat'
let g:airline#extensions#tabline#fnamemod=':t'

" This allows buffers to be hidden if you've modified a buffer.
" This is almost a must if you wish to use buffers in this way.
set hidden

" To open a new empty buffer
" This replaces :tabnew which I used to bind to this mapping
nmap <leader>T :enew<CR>

" Move to the next buffer
nmap <leader>] :bnext<CR>

" Move to the previous buffer
nmap <leader>[ :bprevious<CR>

" Close the current buffer and move to the previous one
" This replicates the idea of closing a tab
nmap <leader>q :bp <BAR> bd #<CR>
